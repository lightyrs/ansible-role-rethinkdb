#
# RethinkDB instance configuration 
#
###############################
## RethinkDB configuration
###############################

### Process options

## User and group used to run rethinkdb
## Command line default: do not change user or group
## Init script default: rethinkdb user and group
runuser=rethinkdb
rungroup=rethinkdb

## Stash the pid in this file when the process is running
## Note for systemd users: Systemd uses its own internal mechanism. Do not set this parameter.
## Command line default: none
## Init script default: /var/run/rethinkdb/<name>/pid_file (where <name> is the name of this config file without the extension)
# pid-file=/var/run/rethinkdb/rethinkdb.pid

### File path options

## Directory to store data and metadata
## Command line default: ./rethinkdb_data
## Init script default: /var/lib/rethinkdb/<name>/ (where <name> is the name of this file without the extension)
directory={{ storage_directory_base }}/{{ storage_data }}

## Log file options
## Default: <directory>/log_file
# log-file=/var/log/rethinkdb

### Network options

## Address of local interfaces to listen on when accepting connections
## May be 'all' or an IP address, loopback addresses are enabled by default
## Default: all local addresses
bind={{ ansible_default_ipv4.address }}

## Address that other rethinkdb instances will use to connect to this server.
## It can be specified multiple times
canonical-address={{ ansible_default_ipv4.address }}

## The port for rethinkdb protocol for client drivers
## Default: 28015 + port-offset
driver-port={{ port.driver }}

## The port for receiving connections from other nodes
## Default: 29015 + port-offset
cluster-port={{ port.cluster }}

## The host:port of a node that rethinkdb will connect to
## This option can be specified multiple times.
## Default: none
join={{ cluster_lead }}:{{ port.cluster }}

## All ports used locally will have this value added
## Default: 0
port-offset={{ port.offset }}

## r.http(...) queries will use the given server as a web proxy
## Default: no proxy
# reql-http-proxy=socks5://example.com:1080

### Web options

## Port for the http admin console
## Default: 8080 + port-offset
http-port=8080

## Disable web administration console
# no-http-admin

### CPU options

## The number of cores to use
## Default: total number of cores of the CPU
cores={{ ansible_processor_cores }}

### Memory options

## Size of the cache in MB
## Default: Half of the available RAM on startup
cache-size={{ (ansible_memtotal_mb * 0.85)|int|abs }}

### Disk

## How many simultaneous I/O operations can happen at the same time
io-threads={{ io_threads }}

## Enable direct I/O
# direct-io

## SSL and TLS connections
# ca cert and key
driver-tls-key={{ tls.key }}
driver-tls-cert={{ tls.cert }}
driver-tls-ca={{ tls.ca }}

cluster-tls-key={{ tls.key }}
cluster-tls-cert={{ tls.cert }}
cluster-tls-ca={{ tls.ca }}

tls-dhparams={{ tls.dhparams }}

### Meta

## The name for this server (as will appear in the metadata).
## If not specified, it will be randomly chosen from a short list of names.
# server-name=server1

server-tag={{ server_tag }}
